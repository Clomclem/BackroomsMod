plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	repositories {
		maven {
			name 'Xander Maven'
			url 'https://maven.isxander.dev/releases'
		}
	}
	maven {
		name = 'ladysnake mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	maven { url = "https://maven.kyrptonaught.dev" }
	maven {
		url 'https://api.modrinth.com/maven'
		content {
			includeGroup "maven.modrinth"
		}
	}

	maven {
		url "https://jitpack.io"
	}
}

allprojects {
	repositories {
		mavenCentral()
		maven {
			url "https://jitpack.io"
		}
	}
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	// Fabric
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Geckolib 4
	modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_mcver}:${project.geckolib_version}"

	// YACL
	modImplementation ("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}") {
		exclude group: 'com.terraformersmc'
	}

	// Custom Portal API
	modImplementation "net.kyrptonaught:customportalapi:${project.customportalapi_version}"
	include "net.kyrptonaught:customportalapi:${project.customportalapi_version}"

	// Discord Rich Presence
	implementation "com.github.JnCrMx:discord-game-sdk4j:$project.discord_game_sdk4j"

	// Track mod usage and announces - MongoDB
	implementation "org.mongodb:mongodb-driver-sync:$project.mongodb_driver_sync_version"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}